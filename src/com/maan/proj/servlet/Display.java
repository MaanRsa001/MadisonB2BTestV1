package com.maan.proj.servlet;import java.io.*;import java.sql.*;import java.util.*;import javax.servlet.*;import javax.servlet.http.*;import proj.sql.*;import proj.util.*;/** *  * <ul> *  * <li> Author : Manikandan. *  * <li> Project : Common file for all projects. *  * <li> Purpose : This is the servlet class file used to display any html file * with replaced the "%%" content. *  * <blockquote>It extends BaseServlet for the common database connectivity.</blockquote> *  * </ul> *  */public class Display extends BaseServlet{	Connection CON;	Statement SMT;	/**	 * 	 * init method to establish data base connection.	 * 	 * @param config	 *            to refer initial configuration settings.	 * 	 * @return void	 * 	 * @Exception SevletException.	 * 	 */	public void init(ServletConfig config) throws ServletException	{		// call the super class init method for database connection.		super.init(config);		// assign the super class variables to local variables.		this.CON = super.CON;		this.SMT = super.SMT;	}	/**	 * 	 * To read the given html file and print the content.	 * 	 * @param req	 *            HttpServletRequest object to get the request from the user.	 * 	 * @param req	 *            HttpServletResponse object to set the response to the user.	 * 	 * @return void.	 * 	 * @Exception SevletException,	 *                IOException.	 * 	 */	public void doGet(HttpServletRequest req, HttpServletResponse res)			throws ServletException, IOException	{		String uid = "";		String fileName = "";		res.setContentType("text/html");		PrintWriter out = res.getWriter();		ServletConfig config = getServletConfig();		SqlFunction sql = new SqlFunction();		// check for the status of the connection, if not active reestablish the		// connection.		try		{			sql.connectionCheck(SMT);		}		catch (Exception e)		{			destroy();			init(config);		}		// get the form variables from the request.		Enumeration enumeration = req.getParameterNames();		while (enumeration.hasMoreElements())		{			String s = (String) enumeration.nextElement();			if (s.equals("filename"))				fileName = req.getParameter(s);			else if (s.equals("uid"))				uid = req.getParameter(s);		}		// check for the validity of the uid		CommonFunction common = new CommonFunction();		StringBuffer returnUid = common.isValidUID(uid, SMT);		if (!returnUid.toString().equals("")) // if not valid, print UID error												// page.		{			out.println(returnUid);			return;		}		// to print the header part.		String replaceArray[][] = { { "%%uid%%", uid } };		StringBuffer returnHead = common.printHead(replaceArray);		if (returnHead.toString().equals(""))		{			String errorString = "* File Cannot be read ";			out.println(common.printError(errorString));			return;		}		out.println(returnHead);		// to print the footer.		out.println(common.printFooter(replaceArray));		out.close();	}	/**	 * 	 * To read the given html file and print the content for the post request.	 * 	 * @param req	 *            HttpServletRequest object to get the request from the user.	 * 	 * @param req	 *            HttpServletResponse object to set the response to the user.	 * 	 * @return void.	 * 	 * @Exception SevletException,	 *                IOException.	 * 	 */	public void doPost(HttpServletRequest req, HttpServletResponse res)			throws ServletException, IOException	{		doGet(req, res);	}	/**	 * 	 * To destroy object when the servlet going to be stop.	 * 	 * @return void	 * 	 */	public void destroy()	{		try		{			// set Connection and statement object to null.			CON = null;			SMT = null;			// close the statement and connection.			CON.close();			SMT.close();		}		catch (Exception e)		{		}	}}